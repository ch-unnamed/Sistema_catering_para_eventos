@{
    ViewBag.Title = "Menus";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb mb-4 mt-2">
    <li class="breadcrumb-item"><a href="./">Dashboard</a></li>
    <li class="breadcrumb-item active">Menús</li>
</ol>

<div class="card">
    <div class="card-header">
        <i class="fas fa-clipboard me-1"></i> Lista de Menús
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal(null)">Crear nuevo Menú</button>
            </div>
        </div>

        <hr />

        <table id="tablaMenus" class="display cell-border" style="width:100%">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Fecha de Creación</th>
                    <th>Acciones</th>
                </tr>
            </thead>

            <tbody>
                @* AJAX *@
            </tbody>
        </table>


    </div>
</div>

<!-- MODAL PARA CREAR NUEVO MENU O EDITAR -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-black text-white">
                <h5 class="modal-title" id="exampleModalLabel">Menú</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <input type="hidden" id="id" value="0" /> <!-- para editar menu -->

                <div class="row g-2">

                    <div class="col-sm-6">
                        <label for="nombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="nombre" autocomplete="off">
                    </div>

                    <div class="col-sm-6">
                        <label for="descripcion" class="form-label">Descripción</label>
                        <input type="text" class="form-control" id="descripcion" autocomplete="off">
                    </div>

                    <div class="col-sm-12 mt-3">
                        <label class="form-label">Seleccionar Platos (mínimo 3, máximo 15)</label>
                        <div class="table-responsive">
                            <table id="tablaSeleccionPlatos" class="display table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Nombre</th>
                                        <th>Precio</th>
                                        <th>Descripción</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>

                    <div class="col-sm-12 mt-2">
                        <div id="mensajeMaximoPlatos" class="alert alert-warning d-none">
                            Ya se seleccionaron 15 platos.
                        </div>
                    </div>

                </div>

                <div class="row mt-2">
                    <div class="col-12">
                        <div id="msjError" class="alert alert-danger" role="alert">
                            A simple danger alert—check it out!
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- MODAL PARA VER PLATOS DEL MENU -->
<div class="modal fade" id="modalVerPlatosMenu" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-black text-white">
                <h5 class="modal-title" id="tituloModalPlatos">Platos del Menú: </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-2">

                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table id="tablaPlatos" class="display table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Nombre del Plato</th>
                                        <th>Precio</th>
                                        <th>Descripción</th>
                                    </tr>
                                </thead>
                                <tbody>

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var tabledataMenus;

        tabledataMenus = $('#tablaMenus').DataTable({
            responsive: true,
            ordering: false,
            ajax: {
                url: '@Url.Action("ListarMenusChef", "Home")',
                type: "GET",
                datatype: "json",
                complete: function () {
                    $('#tablaMenus').DataTable().columns.adjust().draw();
                }
            },
            columns: [
                { data: "Nombre" },
                { data: "Descripcion" },
                { data: "FechaDeCreacion" },
                {
                    data: null,
                    defaultContent: `<div class="btn-group gap-2">
                        <button class="btn btn-primary btn-sm rounded-2 btn-editar">Editar</button>
                        <button class="btn btn-danger btn-sm rounded-2 btn-eliminar">Eliminar</button>
                        <button class="btn btn-info btn-sm rounded-2 btn-ver-platosMenu">Ver platos</button>
                        </div>`,
                    orderable: false,
                    searchable: false
                }
            ],
            language: {
                url: '//cdn.datatables.net/plug-ins/2.3.1/i18n/es-ES.json',
            }
        });

        // PARA EDITAR O CREAR MENU
        function abrirModal(json) {
            $("#msjError").hide();

            if (json != null) { // entra acá para editar
                $("#id").val(json.Id);
                $("#nombre").val(json.Nombre);
                $("#descripcion").val(json.Descripcion);
                $("#exampleModalLabel").text(`Editar Menú: ${json.Nombre}`);
            } else {
                $("#id").val(0);
                $("#nombre").val("");
                $("#descripcion").val("");
                $("#exampleModalLabel").text("Nuevo Menú");
            }

            cargarPlatos(json?.Platos || []);

            $("#FormModal").modal("show");

            $("#FormModal").on("shown.bs.modal", function () {
                $('#tablaSeleccionPlatos').DataTable().columns.adjust().draw();
            });

        }

        $('#tablaMenus tbody').on('click', '.btn-ver-platosMenu', function () {
            var data = tabledataMenus.row($(this).parents('tr')).data();
            verPlatosMenu(data.Id, data.Nombre);
        });

        $('#tablaMenus tbody').on('click', '.btn-editar', function () {
            var fila = $(this).closest('tr');
            var data = tabledataMenus.row(fila).data();

            if (!data) {
                data = tabledataMenus.row(fila.prev()).data();
            }

            if (!data) {
                console.error("No se pudo obtener la data del menú para editar.");
                return;
            }

            // traigo los platos del menú (por id)
            $.ajax({
                url: '@Url.Action("ObtenerPlatosDelMenu", "Home")',
                type: 'GET',
                data: { menu_id: data.Id },
                success: function (response) {
                    abrirModal({
                        Id: data.Id,
                        Nombre: data.Nombre,
                        Descripcion: data.Descripcion,
                        Platos: response.data
                    });
                },
                error: function () {
                    swal("Error", "No se pudieron cargar los platos del menú", "error");
                }
            });
        });

        function cargarPlatos(platosSeleccionados = []) {
            $.ajax({
                url: '@Url.Action("ListarPlatos", "Home")',
                method: 'GET',
                success: function (response) {
                    const data = response.data;

                    if ($.fn.DataTable.isDataTable('#tablaSeleccionPlatos')) {
                        $('#tablaSeleccionPlatos').DataTable().clear().destroy();
                    }

                    $('#tablaSeleccionPlatos tbody').empty();

                    data.forEach(plato => {
                        const estaSeleccionado = platosSeleccionados.some(p => p.Id == plato.Id);
                        $('#tablaSeleccionPlatos tbody').append(`
                            <tr>
                            <td class="text-center">
                                <input class="form-check-input plato-checkbox" type="checkbox" value="${plato.Id}" ${estaSeleccionado ? 'checked' : ''}>
                            </td>
                            <td>${plato.Nombre}</td>
                            <td>${plato.Precio ? `$${plato.Precio.toFixed(2)}` : '-'}</td>
                            <td>${plato.Descripcion || ''}</td>
                        </tr>
                        `);
                    });

                    $(".plato-checkbox").trigger("change");

                    // Marcar o desmarcar checkbox al hacer clic en la fila
                    $('#tablaSeleccionPlatos tbody').on('click', 'tr', function (e) {
                        if (e.target.type !== 'checkbox') {
                            const checkbox = $(this).find('.plato-checkbox');

                            // Solo actuar si no está deshabilitado
                            if (!checkbox.prop('disabled')) {
                                checkbox.prop('checked', !checkbox.prop('checked')).trigger('change');
                            }
                        }
                    });

                    $('#tablaSeleccionPlatos').DataTable({
                        language: {
                            url: '//cdn.datatables.net/plug-ins/2.3.1/i18n/es-ES.json'
                        },
                        orderable: true,
                        order: [],
                        columnDefs: [
                            {
                                targets: 0, // índice de la columna (la del checkbox)
                                orderable: false // desactiva el ordenamiento
                            }
                        ],
                        paging: false, // paginación desactivada
                        lengthChange: false, // ocultar el selector de cantidad
                        scrollY: '300px', // altura fija con scroll vertical
                        scrollCollapse: true
                    });

                    $(".plato-checkbox").on("change", function () {
                        const seleccionados = $(".plato-checkbox:checked").length;
                        const max = 15;

                        if (seleccionados >= max) {
                            $(".plato-checkbox:not(:checked)").prop("disabled", true);
                            $("#mensajeMaximoPlatos").removeClass("d-none");
                        } else {
                            $(".plato-checkbox").prop("disabled", false);
                            $("#mensajeMaximoPlatos").addClass("d-none");
                        }
                    });

                },

                error: function () {
                    $("#msjError").removeClass("d-none").text("Error al cargar los platos.");
                }
            });
        }

        function verPlatosMenu(idMenu, nombreMenu) {
            $('#modalVerPlatosMenu').modal('show');

            $('#tituloModalPlatos').text(`Platos del Menú: ${nombreMenu}`);

            if ($.fn.DataTable.isDataTable('#tablaPlatos')) {
                $('#tablaPlatos').DataTable().clear().destroy();
            }

            $('#tablaPlatos').DataTable({
                ajax: {
                    url: '@Url.Action("ObtenerPlatosDelMenu", "Home")',
                    type: 'GET',
                    data: { menu_id: idMenu },
                    dataSrc: 'data'
                },
                columns: [
                    { data: 'Nombre', title: 'Nombre del Plato' },
                    {
                        data: 'Precio',
                        title: 'Precio',
                        render: function (data, type, row) {
                            return `$${parseFloat(data).toFixed(2)}`;
                        },
                    },
                    { data: 'Descripcion', title: 'Descripción' }
                ],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                }
            });
        }

        function guardar() {
            var platosSeleccionados = [];

            // para recorrer los platos seleccionados, aunque se hayan filtrado platos
            var table = $('#tablaSeleccionPlatos').DataTable();
            table.rows().every(function () {
                var row = $(this.node());
                var checkbox = row.find('.plato-checkbox');
                if (checkbox.is(':checked')) {
                    platosSeleccionados.push({ Id: parseInt(checkbox.val()) });
                }
            });

            if (platosSeleccionados.length < 3) {
                swal("Se deben seleccionar al menos 3 platos", "", "warning");
                return;
            }

            var menu = {
                Id: parseInt($("#id").val()),
                Nombre: $("#nombre").val(),
                Descripcion: $("#descripcion").val(),
                Platos: platosSeleccionados
            };

            $.ajax({
                url: '@Url.Action("GuardarMenu", "Home")',
                type: "POST",
                data: JSON.stringify(menu),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.resultado != 0) {
                        $("#FormModal").modal("hide");
                        swal("¡Menú guardado!", "", "success");
                        $('#tablaMenus').DataTable().ajax.reload();
                    } else {
                        $("#msjError").text(data.mensaje).show();
                    }
                },
                error: function (err) {
                    console.error("Error en AJAX", err);
                }
            });
        }

        // ELIMINAR MENU
        $("#tablaMenus tbody").on("click", '.btn-eliminar', function () {

            var menuSeleccionado = $(this).closest("tr");

            var data = tabledataMenus.row(menuSeleccionado).data(); // los datos de la fila seleccionada

            console.log(data);

            swal({
                title: "¿Esta Seguro?",
                text: "¿Queres Eliminar el Menu?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
                async function () {
                    try {
                        const response = await fetch("/Home/EliminarMenu", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json; charset=utf-8"
                            },
                            body: JSON.stringify({ idMenu: data.Id })

                        });

                        if (!response.ok) {
                            throw new Error("Error al realizar la solicitud al servidor.")
                        }

                        const result = await response.json();

                        if (result.resultado) {
                            tabledataMenus.row(menuSeleccionado).remove().draw(false);
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "No se pudo eliminar",
                                text: result.mensaje
                            });
                        }

                    } catch (error) {
                        $("#msjError").text("Error con fetch");
                        console.error("Error en la solicitud fetch:", error);
                        swal("Error", "Faltan completar campos", "error");
                    }
                });

        });
    </script>
}