
@{
    ViewBag.Title = "Insumos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb mb-4 mt-2">
    <li class="breadcrumb-item"><a href="./">Dashboard</a></li>
    <li class="breadcrumb-item active">Insumos</li>
</ol>

<div class="card">
    <div class="card-header">
        <i class="fa fa-box"></i> Lista de Insumos
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal(null)">Crear nuevo Insumo</button>
                <button type="button" class="btn btn-success" onclick="abrirModalNuevoLote(null)">Agregar nuevo Lote</button>
            </div>
        </div>

        <hr />

        <table id="tablaInsumos" class="display cell-border" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Tipo</th>
                    <th>Costo</th>
                    <th>Unidades</th>
                    <th>Stock mínimo</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @* AJAX*@
            </tbody>
        </table>


    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-black text-white">
                <h5 class="modal-title" id="exampleModalLabel">Insumo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-2">

                    <div class="col-sm-6">
                        <label for="nombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="nombre" autocomplete="off" required>
                        <div id="NombreError" class="alert alert-danger" role="alert">Error en el nombre ingresado</div>
                    </div>

                    <div class="col-sm-6">
                        <input type="hidden" id="id">
                    </div>

                    <div class="col-sm-6">
                        <label for="tipo" class="form-label">Tipo</label>
                        <select class="form-select" id="tipo" required>
                            <option value="" disabled selected>Seleccione un tipo</option>
                        </select>

                        <div id="TipoError" class="alert alert-danger" role="alert">Error en el tipo ingresado</div>
                    </div>

                    <div class="col-sm-6">
                        <label for="stockMinimo" class="form-label">Stock mínimo</label>
                        <input type="number" class="form-control" id="stockMinimo" autocomplete="off" required>
                        <div id="StockMinimoError" class="alert alert-danger" role="alert">Error en el stock mínimo</div>
                    </div>

                    <div class="col-sm-6">
                        <label for="costo" class="form-label">Costo</label>
                        <input type="number" class="form-control" id="costo" autocomplete="off" required>
                        <div id="CostoError" class="alert alert-danger" role="alert">Error en el costo</div>
                    </div>

                </div>

                <div class="row mt-2">
                    <div class="col-12">
                        <div id="msjError" class="alert alert-danger" role="alert">
                            Error en los datos ingresados
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Nuevo Lote -->
<div class="modal fade" id="FormModalLote" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-black text-white">
                <h5 class="modal-title" id="exampleModalLabel">Lote</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="row g-2">
                    <div class="col-sm-12">
                        <label for="selectInsumoLote" class="form-label">Seleccionar Insumo</label>
                        <select id="selectInsumoLote" class="form-select" required>
                            <option value="">Seleccione el Insumo</option>
                            @* Las opciones se cargan por JS *@
                        </select>
                        <div id="InsumoLoteError" class="alert alert-danger d-none" role="alert">Debe seleccionar un insumo</div>
                    </div>

                    <div class="col-sm-6">
                        <label for="cantidadLote" class="form-label">Unidades</label>
                        <input type="number" class="form-control" id="cantidadLote" autocomplete="off" required>
                        <div id="CantidadLoteError" class="alert alert-danger d-none" role="alert">Error en la cantidad ingresada</div>
                    </div>

                    <div class="col-sm-6">
                        <label for="fechaVencimientoLote" class="form-label">Fecha de vencimiento</label>
                        <input type="date" class="form-control" id="fechaVencimientoLote" autocomplete="off" required>
                        <div id="FechaIngresoError" class="alert alert-danger d-none" role="alert">Error en la fecha ingresada</div>
                    </div>


                    <div class="row mt-2">
                        <div class="col-12">
                            <div id="msjErrorLote" class="alert alert-danger" role="alert">
                                Error en los datos ingresados
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" onclick="guardarLote()">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Historial de Lotes -->
<div class="modal fade" id="FormModalHistorial" tabindex="-1" aria-labelledby="historialModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="historialModalLabel">Historial de Lotes</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <table id="tablaHistorialLotes" class="table table-bordered table-striped" style="width:100%">
                    <thead>
                        <tr>
                            <th>ID Lote</th>
                            <th>Cantidad</th>
                            <th>Fecha de Ingreso</th>
                            <th>Fecha de Vencimiento</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* AJAX  *@
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal Restar Stock -->
<div class="modal fade" id="modalRestar" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Restar stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="restarIdInsumo">
                <label for="restarCantidad" class="form-label">Cantidad a restar</label>
                <input type="number" min="1" class="form-control" id="restarCantidad">
                <div id="restarError" class="alert alert-danger mt-2 d-none"></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button class="btn btn-danger" id="btnConfirmarResta">Restar</button>
            </div>
        </div>
    </div>
</div>



@* t0d0s los scripts son renderizados a layout, en la parte de RenderSection *@
@section Scripts {
    <script>
    var tabledata;
    var filaSeleccionada;

    tabledata = $('#tablaInsumos').DataTable({
    responsive: true,
    ordering: false,
    ajax: {
        url: '@Url.Action("ListarInsumos", "Home")',
        type: "GET",
        datatype: "json",
    },
    columns: [
        { data: "Id" },
        { data: "Nombre" },
        { data: "TipoNombre" },
        { data: "Costo" },
        {
            data: null,
            render: function (data) {
                return `
                  <span class="">${data.Unidad}</span>
                  <button class="btn btn-outline-danger btn-sm btn-restar"
                          title="Restar stock">
                      <i class="fas fa-minus"></i>
                  </button>`;
            },
            orderable: false,
            searchable: false
        },
        { data: "StockMinimo" },
        {
            data: null,
            defaultContent: `
        <button class="btn btn-primary btn-sm btn-editar"><i class="fas fa-pen"></i></button>
        <button class="btn btn-danger btn-sm ms-2 btn-eliminar"><i class="fas fa-trash"></i></button>
        <button class="btn btn-info btn-sm me-1 btn-ver-historial">Ver historial</button>
    `,
            orderable: false,
            searchable: false
        }
    ],
        language: {
            url: '//cdn.datatables.net/plug-ins/2.3.1/i18n/es-ES.json'
        }
    });

        $('#tablaInsumos').on('xhr.dt', function (e, settings, json, xhr) {
            console.log(json.data);
        });
        // Ocultar mensajes de error al abrir el modal
        function limpiarErrores() {
            $('#InsumoLoteError').addClass('d-none');
            $('#CantidadLoteError').addClass('d-none');
            $('#CostoError').addClass('d-none');
            $('#FechaIngresoError').addClass('d-none');
            $('#msjErrorLote').hide();
        }
        // Carga los tipos de insumos en el select desde la BD

        function cargarTiposInsumo() {
            fetch('/Home/ObtenerTiposInsumo')
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById('tipo');
                    select.innerHTML = '<option value="" disabled selected>Seleccione un tipo</option>';
                    data.data.forEach(insumo => {
                        const option = document.createElement('option');
                        option.value = insumo.Id;
                        option.text = insumo.Nombre;
                        select.appendChild(option);
                    });
                })
                .catch(error => console.error('Error al obtener tipos de insumo:', error));
        }
        function limpiarErroresInsumo() {
            $('#NombreError, #CantidadError, #TipoError, #StockMinimoError, #CostoError, #msjError').hide();
        }
        $('#FormModal').on('show.bs.modal', function () {
            limpiarErroresInsumo();
            cargarTiposInsumo();
        });

        $('#tablaInsumos tbody').on('click', '.btn-ver-historial', function () {
            var data = tabledata.row($(this).parents('tr')).data();
            abrirModalHistorial(data.Id);
        });



        // Carga insumos en el select desde el backend
        function cargarInsumosEnSelect() {
            $.ajax({
                url: '/Home/ListarInsumos',
                method: 'GET',
                success: function (response) {
                    const select = $('#selectInsumoLote');
                    select.empty();
                    select.append('<option value="">Seleccione el Insumo</option>');
                    response.data.forEach(insumo => {
                        select.append(`<option value="${insumo.Id}">${insumo.Nombre}</option>`);
                    });
                },
                error: function () {
                    swal("Error", "No se pudieron cargar los insumos", "error");
                }
            });
        }

        // Ejecutar al abrir el modal
        $('#FormModalLote').on('show.bs.modal', function () {
            cargarInsumosEnSelect();
            limpiarErrores();
        });

        // Función para validar y enviar el lote
        function guardarLote() {
            limpiarErrores();

            let valido = true;
            const insumoId = $('#selectInsumoLote').val();
            const cantidad = $('#cantidadLote').val();
            const fechaVencimiento = $('#fechaVencimientoLote').val();

            if (!insumoId) {
                $('#InsumoLoteError').removeClass('d-none');
                valido = false;
            }
            if (!cantidad || cantidad <= 0) {
                $('#CantidadLoteError').removeClass('d-none');
                valido = false;
            }
            if (!fechaVencimiento) {
                $('#FechaIngresoError').removeClass('d-none');
                valido = false;
            }

            if (!valido) {
                $('#msjErrorLote').show();
                return;
            }

            const hoy = new Date().toISOString().split('T')[0];
            if (fechaVencimiento < hoy) {
                $('#FechaIngresoError').removeClass('d-none').text('Fecha inválida o pasada.');
                return;
            }

            $('#msjErrorLote').hide();
            console.log({
                InsumoId: insumoId,
                Cantidad: cantidad,
                FechaDeVencimiento: fechaVencimiento
            });
            $.ajax({
                url: '@Url.Action("GuardarLote", "Home")',
                method: 'POST',
                data: {
                    InsumoId: insumoId,
                    Cantidad: cantidad,
                    FechaDeVencimiento: fechaVencimiento
                },

                success: function (resp) {
                    $('#FormModalLote').modal('hide');
                    swal("Lote guardado correctamente!", "Presione OK para continuar", "success");
                },
                error: function () {
                    swal("Error al guardar lote", "Presione OK para continuar", "error");
                }
            });
        }




    // Funcion para abrir el modal
    function abrirModal(json) {

    // Limpiar campos para que no queden datos de otras filas
        $("#id").val(0);
        $("#nombre").val("");
        $("#stockMinimo").val("");
        $("#tipo").val("");
        $("#costo").val("");
        $("#Unidades").val("");
        $("#fechaDeCreacion").val("");

        $("#msjError").hide();


        if (json != null) { // entra aca si le da a editar, ya que habrian datos en la fila

    // le damos el valor al campo especifico del json q obtuvimos con ajax anteriormente

            $("#id").val(json.Id);
            $("#nombre").val(json.Nombre);
            $("#stockMinimo").val(json.StockMinimo);
            $("#tipo").val(json.TipoNombre);
            $("#costo").val(json.Costo);
            $("#Unidades").val(json.Unidades);
            $("#fechaDeCreacion").val(json.FechaDeCreacion);
            }

            $("#FormModal").modal("show");
    }

    function abrirModalNuevoLote() {
    // Limpiar campos
    $("#codigoLote").val("");
    $("#cantidadLote").val("");
    $("#fechaIngresoLote").val("");
    $("#fechaVencimientoLote").val("");
    $("#selectInsumoLote").empty().append('<option value="">-- Seleccione un Insumo --</option>');
    $("#msjErrorLote").addClass("d-none");

    // Obtener insumos vía AJAX
    $.ajax({
        url: '@Url.Action("ListarInsumos", "Home")',
        type: 'GET',
        success: function (data) {
            data.data.forEach(function (insumo) {
                $('#selectInsumoLote').append(`<option value="${insumo.Id}">${insumo.Nombre}</option>`);
            });
        }
    });

    $("#FormModalLote").modal("show");
}

  // Evento para editar: se muestra el modal con los datos del insumo seleccionado
$('#tablaInsumos tbody').on('click', '.btn-editar', function () {
    filaSeleccionada = $(this).closest("tr");
    var data = tabledata.row(filaSeleccionada).data(); // Obtener datos de la fila
    console.log(data);
    abrirModal(data); // Función que abre el modal y carga los datos
});

// Evento para eliminar: se muestra confirmación y se realiza la eliminación por AJAX
$('#tablaInsumos tbody').on('click', '.btn-eliminar', function () {
    var insumoSeleccionado = $(this).closest("tr");
    var data = tabledata.row(insumoSeleccionado).data(); // Obtener datos de la fila
    console.log(data);

    swal({
        title: "¿Está seguro?",
        text: "¿Desea eliminar el insumo?",
        type: "warning",
        showCancelButton: true,
        confirmButtonClass: "btn-primary",
        confirmButtonText: "Sí",
        cancelButtonText: "No",
        closeOnConfirm: true
    }, function () {
        console.log(data.Id);

        // Llamada AJAX para eliminar
        $.ajax({
            url: '@Url.Action("EliminarInsumo", "Home")',
            type: "POST",
            data: { Id: data.Id },
            success: function (response) {
                if (response.resultado) {
                    tabledata.row(insumoSeleccionado).remove().draw(false); // Eliminar visualmente la fila
                    swal("Insumo eliminado exitosamente", "presione OK para continuar", "success");
                } else {
                    swal("No se pudo eliminar", response.mensaje, "error");
                }
            },
            error: function (error) {
                swal("No se pudo eliminar", error, "error");
                console.error(error);
            }
        });
    });
});


        function guardar() {
            // Ocultar mensaje de error antes de validar
            $("#msjError").hide();

            // Obtener valores y parsear 
            var Id = parseInt($("#id").val()) || 0;
            var Nombre = $("#nombre").val().trim();
            var StockMinimo = parseInt($("#stockMinimo").val());
            //var Cantidad = parseInt($("#Unidad").val()); //
            var TipoId = parseInt($("#tipo").val());
            var tipoNombre = $("#tipo option:selected").text();
            var Costo = parseFloat($("#costo").val());
            // var FechaDeCreacion = $("#fechaDeCreacion").val();

            // Validaciones
            if (!Nombre) {
                $("#msjError").text("El nombre es obligatorio.").show();
                return;
            }
            if (isNaN(StockMinimo) || StockMinimo <= 0) {
                $("#msjError").text("El stock mínimo debe ser un número mayor a 0.").show();
                return;
            }
            if (isNaN(TipoId) || TipoId <= 0) {
                $("#msjError").text("Debe seleccionar un tipo válido.").show();
                return;
            }
            if (isNaN(Costo) || Costo <= 0) {
                $("#msjError").text("El costo debe ser un número mayor a 0.").show();
                return;
            }

            
            var Insumo = {
                Id: Id,
                Nombre: Nombre,
                StockMinimo: StockMinimo,
                // Cantidad: Cantidad,  
                TipoId: TipoId,
                TipoNombre: tipoNombre,
                Costo: Costo
                // FechaDeCreacion: FechaDeCreacion
            };

            console.log("Insumo antes de enviar:", Insumo);

            // Llamada ajax
            $.ajax({
                url: '@Url.Action("GuardarInsumo", "Home")',
                type: "POST",
                data: JSON.stringify(Insumo),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (Id === 0) {
                        if (data.nuevoId && data.nuevoId > 0) {
                            Insumo.Id = data.nuevoId;
                            tabledata.row.add(Insumo).draw(false);
                            location.reload();
                            $("#FormModal").modal("hide");
                        } else {
                            $("#msjError").text(data.mensaje || "Error al crear insumo.").show();
                        }
                    } else {
                        
                        if (data.exito) {
                            tabledata.row(filaSeleccionada).data(Insumo).draw(false);
                            location.reload();
                            filaSeleccionada = null;
                            $("#FormModal").modal("hide");
                            
                        } else {
                            $("#msjError").text(data.mensaje || "Error al editar insumo.").show();
                        }
                    }
                },
                error: function (error) {
                    $("#msjError").text("Error en la petición AJAX.").show();
                    console.log(error);
                }
            });
        }
        function abrirModalHistorial(idInsumo) {
            $('#FormModalHistorial').modal('show');

            if ($.fn.DataTable.isDataTable('#tablaHistorialLotes')) {
                $('#tablaHistorialLotes').DataTable().destroy();
            }

            $('#tablaHistorialLotes').DataTable({
                ajax: {
                    url: '@Url.Action("ListarLoteInsumo", "Home")',
                    type: 'GET',
                    data: { idInsumo: idInsumo },
                    dataSrc: function (json) {
                        console.log('Respuesta AJAX:', json);
                        return json.data || [];
                    }
                },
                columns: [
                    { data: 'Id', title: 'ID Lote' },
                    { data: 'Cantidad', title: 'Cantidad' },
                    {data: 'fecha_ingreso', title: 'Fecha Ingreso' },
                    { data: 'fecha_vencimiento', title: 'Fecha Vencimiento' }
                ],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                }
            });
        }
    // Abrir modal al hacer clic en el botón de restar
$('#tablaInsumos tbody').on('click', '.btn-restar', function () {
    const data = tabledata.row($(this).parents('tr')).data();
    $('#restarIdInsumo').val(data.Id);
    $('#restarCantidad').val('');
    $('#restarError').addClass('d-none');
    $('#modalRestar').modal('show');
});

// Confirmar resta
$('#btnConfirmarResta').click(function () {
    const idInsumo = $('#restarIdInsumo').val();
    const cantidad = parseInt($('#restarCantidad').val(), 10);

    if (!cantidad || cantidad <= 0) {
        $('#restarError').text('Ingrese una cantidad válida').removeClass('d-none');
        return;
    }

    $.post('@Url.Action("DescontarStock", "Home")',
           { idInsumo, cantidad })
     .done(resp => {
         if (resp.success) {
             $('#modalRestar').modal('hide');
             tabledata.ajax.reload(null, false);
             toastr.success(resp.message);
         } else {
             $('#restarError').text(resp.message).removeClass('d-none');
         }
     })
     .fail(() => $('#restarError').text('Error de servidor').removeClass('d-none'));
});


    </script>
}
